section: h1 觀念介紹

section
    section
        h2 Cloud Computing
        p Wiki 定義：
        blockquote provides shared computer processing resources and data to computers and other devices on demand
        p 由服務供應商（Service Providers）提供各種功能給使用者
        ul
            li 舉凡一般大眾使用的 email、messaging、storage 等
            li 或是開發者會用到的 compute machines、網路架構等
    section
        img(src="https://upload.wikimedia.org/wikipedia/commons/b/b5/Cloud_computing.svg", style="height:80%;")
        small Reference: https://en.wikipedia.org/wiki/Cloud_computing

section
    section
        p 從服務類型來區分雲端運算的層級：
        ul
            li Software as a Service
            li Platform as a Service
            li Infastructure as a Service
    section
        h3 Software as a Service (SaaS)
        ul
            li 提供軟體給使用者
            li 可跨平台、跨裝置存取內容及使用服務
            li Gmail, Google Drive, etc.
    section
        h3 Platform as a Service (PaaS)
        ul
            li 提供建立好的平台讓使用者於其上開發自己的服務
            li 通常預先建立好虛擬機（virtual machine, VM）、OS、程式語言環境、資料庫、web server 等環境，加速開發與佈署時間
            li Heroku, Google App Engine, Azure
    section
        h3 Infastructure as a Service (IaaS)
        ul
            li 提供基礎伺服器架構，包括 VM、OS、網路層、storage 等
            li 使用者可自行架設自己的軟體堆疊（Software Stack）與使用技術
            li 虛擬技術讓服務不受硬體層完全綁死

section
    h2 Web Server 架構與原理

section
    section
        p Web Server 泛指提供網頁、運行在電腦上的伺服器程式
        img(src="/images/web_server.png")
    section
        h3 Web Server 的職責
        ul
            li 藉由網路連線（通常是 HTTP）提供網頁內容
            li 接收連進來的網路連線，再依據設定邏輯回傳資料
            li 例如，使用者在瀏覽器輸入 http://www.google.com 即意指傳送連線給 Google 的 web server，對方根據網址回傳首頁的網頁內容給瀏覽器
            li 「依據設定邏輯」指的是根據開發者寫的應用程式（application）做判斷和網頁內容提供/生成
    section
        h3 簡單的類型區分
        ul
            li 純 Web Server：應用程式和 web server 邏輯分開，例如 PHP + Apache HTTP Server、Java EE + Web Container 等
            li Web Server + 應用程式邏輯：例如 Ruby on Rails (RoR)、Node.js 等
    section
        h3 如何設定網路層讓 Web Server 和外界互動
        ul
            li 每台連網的伺服器均對應一組 Internet Protocol (IP) Address，例如 140.112.45.120
            li 從網域供應商（Domain Provider）購買網域，例如 www.himelight.com
            li 在網域供應商設定 DNS 規則，讓網域對應至伺服器 IP
            li
                | 讓 Web Server 聽取伺服器的特定埠號（Port），即可等待傳入的連線
                ul
                    li 一般而言 port 為 80 (HTTP) 或 443 (HTTPS)

section
    section
        h3 為何使用雲端服務架設 Web Server？
        ol
            li 無初始成本（硬體成本）
            li 硬體管理成本極度低廉
            li 架構彈性，可自由切換、擴增
    section
        h3 Use Case #1
        ul
            li 購買 PC 桌機，架設於辦公室
            li 接上電源、網路，24hr 無休運轉
            li 安裝 Cent OS、Apache HTTP Server 等程式
            li 由網管指定 IP
            li 由 DNS Provider 端設定 domain name 與 IP 的連結
            li 將開發完的 web app 放入 PC
    section
        h3 Use Case #2
        ul
            li 向 AWS 申請帳號，並建立一個 EC2 instance (VM)
            li 登入 VM 安裝 Apache HTTP Server 等程式
            li 由 AWS Console 設定 IP
            li 由 DNS Provider 端設定 domain name 與 IP 的連結
            li 將開發完的 web app 放入 VM
    section
        h3 優缺點分析
        table: tbody
            tr
                td
                td #1
                td #2
            tr
                td Pros
                td
                td: ul
                    li 初始成本低
                    li 可根據連線需求動態增減機器
            tr
                td Cons
                td: ul
                    li 怕斷電
                    li 需自行負擔電費
                    li 網管溝通成本
                td: ul
                        li 較難估算成本

section
    section
        h2: a(href="https://aws.amazon.com") Amazon Web Service (AWS)
        ul
            li AWS 是一套完整的 cloud computing solution，涵蓋 IaaS 和 PaaS 等層級的服務
            li 可達成各種使用情境，如 Web Server、High Performance Computing (HPC)、Media and Gaming 等
            li 除了手動由網路介面（console）操作，所有 AWS 服務均能藉由 shell script 自動化
    each imgName in ['iaas', 'paas', 'others']
        section
            img(src='/images/aws_' + imgName + '.jpg')
            small Reference: https://aws.amazon.com
    section
        p AWS 服務一覽
        img(src="/images/aws_all.jpg")
        small Reference: https://console.aws.amazon.com

section
    section: h3 AWS 常用服務簡介
    section
        h3 Elastic Compute Cloud (EC2)：雲端的虛擬伺服器
        ul
            li 由 AWS 提供一台安裝好 OS 的 VM，稱為 EC2 instance
            li 每個 instance 配有對外 IP，可遠端連線進入直接使用
            li EC2 instance 本身相當輕量，建立、升級、複製均相當快速
    section
        h3 Simple Storage Service (S3)：在雲端儲存任意檔案
        ul
            li 用低廉的價格提供超大容量的儲存空間，讓使用者任意上傳、下載檔案
            li 每個檔案均搭配一組 URL 直接取用
            li 搭配 EC2 和其他服務，可用來儲存 Web App 生成的檔案
            li 例如，使用者上傳大頭照至 EC2 運行的 Web App 後，轉存至 S3 儲存
    section
        h3 Route53：動態設定 DNS
        ul
            li 綁定網域後，能夠任意新增子網域和其 DNS 規則
            li Route53 同時提供網域註冊服務
    section
        h3 DynamoDB &amp; RDS
        ul
            li AWS 提供的資料庫系統
            li DynamoDB 為 noSQL 資料庫，RDS 為 SQL 資料庫
            li 可搭配 EC2 使用，將資料庫從伺服器抽離出來

section
    section
        p 原本的 Web Server 架構
        img(src="/images/web_server_before.png")
    section
        p 在 AWS 上佈署的情況
        img(src="/images/web_server_on_aws_1.png")
    section
        p 抽離資料庫和檔案儲存空間
        img(src="/images/web_server_on_aws_2.png")

section
    h2 Web Server 開發與佈署流程
section
    section
        h4 需求訪談後：架構規劃
        ul
            li 根據網站需求整理需要的服務類型
            li 選定使用技術
    section
        h4 本地端開發
        ul
            li 在開發機器（自己的筆電）上架設 web server、database 等
            li
                | 此時主要開發的部份包括
                ul
                    li 核心商業邏輯
                    li 和雲端架構無關的部分
    section
        h4 線上測試與開發（staging）
        ul
            li 在伺服器上架設和實際環境相同的測試用環境
            li 此時可開發和架構規劃相關的部份
            li 調整當初架構不足或設計錯誤的地方
    section
        h4 佈署上線（production）
        ul
            li 架設環境後將完成的程式放上線

section
    h3 以台大創創中心（TEC）網站為例
    table.no-boder: tbody: tr
        td
            h4 開發階段
            ul
                li 需求訪談與整理
                li 架構規劃
        td
            h4 佈署上線
            ul
                li 佈署方面需求
                li 上線過程
section
    section
        h4 網站功能需求
        ul
            li 可新增、編輯最新消息、活動、專欄等實體（Entity）項目
            li 提供讓管理員登入的後台頁面進行編輯
            li 需有圖片上傳功能
    section
        h4 所需服務
        ol
            li 運行 Web Server：AWS EC2
            li
                | 將實體項目儲存於資料庫：
                ol
                    li 在 EC2 instance 上運行 database
                    li 使用 DynamoDB
                    li 使用 RDS
            li
                | 圖片上傳功能：
                ol
                    li 直接將圖片儲存於 EC2 instance 的檔案系統內
                    li 使用 S3
                    li
                        | 使用其他第三方服務&nbsp;
                        i e.g.
                        | &nbsp;
                        a(href="http://cloudinary.com") Cloudinary
    section
        h4 選定使用技術
        ul
            li
                | 因
                span.color-red 機器架構可自行選定
                | ，能夠自由選用使用技術
            li Web Server 主體選定使用 Node.js 開發
            li
                | 因應編輯實體項目功能需求，直接使用現有的 content management system (CMS)：
                a(href="http://keystonejs.com") Keystone.js
        br
        p &ast; 因應 Keystone.js 回頭挑選使用的雲端服務：
        ul
            li Database: MongoDB（運行於 EC2 instance 內）
            li 圖片上傳：使用 Cloudinary

section
    h2 佈署階段
    ol
        li 佈署 TEC 網站至 EC2 instance 上
        li TEC 網站的網路層相關設定
        li 其他創創中心相關的網站佈署與設定

section
    section
        h4 佈署至 EC2 instance
        ul
            li 建立 AWS 帳號
            li 建立新的 EC2 instance
            li 用 ssh 登入 VM
            li 安裝 Node.js、Nginx、MongoDB 等軟體
            li 從 git repository 複製網站程式碼到 VM
            li Up and Running!
    section
        h4 建立 AWS 帳號
        ul
            li 新帳號擁有12個月份的 t2.micro EC2 instance 免費額度
            li
                | 或是申請針對 startup 的
                a(href="https://aws.amazon.com/activate") AWS Activate Program
    section
        h4 建立 EC2 Instance
        table: tbody
            tr
                td: span 區域（Zone）
                td: ul
                    li VM 實際擺放的資料中心（data center）位置，會影響不同地區使用者的連線速度
                    li 亞洲通常選擇新加坡或東京
            tr
                td: a(href="https://aws.amazon.com/ec2/instance-types") Instance Types
                td 依功能、VM 能力（CPU 速度、RAM 大小、硬碟容量等）決定價格
            tr
                td Amazon Machine Image (AMI)
                td: ul
                    li 選擇 AWS 預先準備好的 OS image 安裝至新的 VM 上
                    li 一般選擇 AWS Linux 或 Ubuntu
                    li 可以自行建立（例如預先安裝好 Node.js 的 Ubuntu image）
    section
        h4 設定新建立的 EC2 Instance
        table: tbody
            tr
                td 下載 PEM 憑證檔
                td: ul
                    li 每台機器（或多台機器）均對應一個 .pem 檔案，用於 ssh 登入的身分驗證
                    li 只能下載一次，請小心保管
            tr
                td Security Group
                td 設定 IP 和 Port 的 blacklist/whitelist
            tr
                td Elastic IP
                td 建立一組對外連接用的 IP address 並指定給新的 EC2 instance

section
    section
        h4 其他網站的佈署需求
        p 因思源樓跳電問題，將下列網站全部改佈署至 AWS：
        table
            thead: tr
                th 網站
                th 預計使用網址
            tbody
                tr
                    td 台大創創中心（TEC）
                    td http://tec.ntu.edu.tw
                tr
                    td 創聯會（NTUEA）
                    td http://ntuea.ntu.edu.tw
                tr
                    td 創創學程（CEP）
                    td http://cep.ntu.edu.tw
                tr
                    td 種子競賽（Seed）
                    td http://tec.ntu.edu.tw/seed
                tr
                    td 媒合會（Match）
                    td http://tec.ntu.edu.tw/match
    section
        h4 理想狀況
        img(src="/images/tec_deploy_1.png")
    section
        h4 從 URL 觀察的理想佈署狀況
        img(src="/images/tec_deploy_2.png")
    section
        h4 實際網站擺設狀況
        img(src="/images/tec_deploy_3.png")
    section
        p 針對子網站（Seed 和 Match）的處理方式
        ul
            li 由於網站開發會假設網址從根路徑開始，因此需改動網頁內部程式碼
            li 把網頁引用的靜態資源路徑加上前綴的子路徑
            li 網站內部指向的 URL 也同樣處理
        p 子網站和主網站的位置不同時：
        ul
            li 使用 Apache/Nginx 的 Request Forwarding/Proxy
            li 例：在 TEC 機器的 Nginx 指定所有 /seed 開頭的連線全部導到 Seed 機器去
    section
        img(src="/images/tec_deploy_4.png")

section
    h2 其他雲端服務
    //- p Google Cloud Platform, Heroku, DigitalOcean
    //- p AWS: SES, CloudFront, Beanstalk, Lambda, Route53, IoT

section
    h3: a(href="https://cloud.google.com") Google Cloud Platform (GCP)
    section: ul
        li 由 Google 推出的 IaaS 平台
        li 大部分功能均能對應至 AWS 的服務
        li 新帳號提供兩個月內 $600 USD 的試用額度
        li 因 Google 在彰濱工業區建立 datacenter，亞洲區域的價格和連線速度優於 AWS（台灣內部的連線狀況）
    section
        p GCP 和 AWS 服務對照
        table
            thead: tr
                th Amazon Web Service
                th Google Cloud Platform
            tbody
                tr
                    td EC2
                    td Compute Engine
                tr
                    td S3
                    td Cloud Storage
                tr
                    td Route 53
                    td Cloud Virtual Network, Cloud DNS, etc.
                tr
                    td DynamoDB
                    td Cloud Bigtable, Cloud Datastore
                tr
                    td RDS
                    td Cloud SQL

section
    h3: a(href="https://cloud.google.com/appengine") Google App Engine
    ul
        li 由 Google 推出的 PaaS 產品，目前已整合進 Google Cloud Platform
        li 開發者直接撰寫 web app 後上傳至 app engine 即完成佈署，不需從頭設定環境
        li 支援 Python、Java EE、PHP、Go 等程式語言
        li 比 IaaS 開發方式方便許多，相對也有許多限制
section
    h3: a(href="https://www.heroku.com") Heroku
    ul
        li 歷史悠久的 PaaS 平台
        li 支援 Ruby on Rails、Node.js、PHP、Python、Go 等程式語言
        li 利用 git 的操作方式進行上傳和佈署
        li 相較目前為止介紹的服務而言，擁有真正意義上的免費方案

section
    h3 Amazon Elastic Beanstalk (ELB)
    ul
        li AWS 近年發表的 PaaS 平台
        li 底層集結了 EC2、S3、DB、Route 53 等服務，可說是 AWS 自家集大成的 PaaS 服務
